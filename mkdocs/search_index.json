{
    "docs": [
        {
            "location": "/", 
            "text": "DCLS GDIP\n\n\nPipeline to generate SNP matricies, phylogenetic trees, multilocus sequence typing (MLST) and antimicrobial micorbial resistance gene (AMR) reports from sequenced isolates involved in food-borne outbreak investigations.\n\n\nQuick Start\n\n\nAssuming the \ndcls/gdip/scripts\n directory is on your \n$PATH\n:\n\n\n\n\nEnter a directory with some fastq files ending in \n_1.fastq.gz\n and \n_2.fastq.gz\n.\n\n\nCopy the makefile using the command \ncopy_makefile\n.\n\n\nRun the pipeline with \nmake\n.\n\n\n\n\n# Enter the directory with the data:\ncd exampledata\n\n# Copy the makefile:\ncopy_makefile\n\n# Start the pipeline!\nmake\n\n\n\n\nFor full instructions, see the \nUser Guide\n.\n\n\nPipeline\n\n\n\n\nContact\n\n\n\n\nStephen D. Turner\n\n\nKevin G. Libuit", 
            "title": "Home"
        }, 
        {
            "location": "/#dcls-gdip", 
            "text": "Pipeline to generate SNP matricies, phylogenetic trees, multilocus sequence typing (MLST) and antimicrobial micorbial resistance gene (AMR) reports from sequenced isolates involved in food-borne outbreak investigations.", 
            "title": "DCLS GDIP"
        }, 
        {
            "location": "/#quick-start", 
            "text": "Assuming the  dcls/gdip/scripts  directory is on your  $PATH :   Enter a directory with some fastq files ending in  _1.fastq.gz  and  _2.fastq.gz .  Copy the makefile using the command  copy_makefile .  Run the pipeline with  make .   # Enter the directory with the data:\ncd exampledata\n\n# Copy the makefile:\ncopy_makefile\n\n# Start the pipeline!\nmake  For full instructions, see the  User Guide .", 
            "title": "Quick Start"
        }, 
        {
            "location": "/#pipeline", 
            "text": "", 
            "title": "Pipeline"
        }, 
        {
            "location": "/#contact", 
            "text": "Stephen D. Turner  Kevin G. Libuit", 
            "title": "Contact"
        }, 
        {
            "location": "/userguide/", 
            "text": "User Guide\n\n\nDCLS GDIP runs from the Linux command line and consists of a number of shell scripts and a single Makefile compiling them all. Default parameters will generate a report for NGS reads obtained from \nSalmonella enterica\n subsp enteritidis isolates (Reference strain: \nP125109 (NC_011294.1)\n, MLST; \nSalmonella enterica\n). For other species, see \nAdvanced usage\n.  \n\n\nThis guide assumes an AWS EC2 instance launched from the DCLS GDIP image \nami-9f630088\n.\n\n\nBasic usage\n\n\nUpdate GDIP scripts\n\n\nThe AWS image \nami-9f630088\n ships with all necessary scripts for a completely automated analysis. These scripts reside in the \ngdip\n directory in the \nubuntu\n user's home directory (\n/home/ubuntu/gdip\n). After launching the image, enter this directory and \ngit pull\n to pull in any changes made to the scripts since the image was created.\n\n\n# Enter the gdip directory\ncd ~/gdip\n\n# Pull any updates since the image was created\ngit pull\n\n# Go back to your home directory\ncd\n\n\n\n\nInput\n\n\nDCLS GDIP assumes a project directory with paired fastq files ending in either: \n\n\n\n\n_1.fastq.gz\n and \n_2.fastq.gz\n; or \n\n\nR1.fastq.gz\n and \nR2.fastq.gz\n\n\n\n\nIf your fastq.gz files are on a local drive, create a new project directory on your EC2 instance and use \nscp\n to copy sequence files into that directory:\n\n\n\n\nFrom the EC2 instance: \nmkdir MyProjectDir\n\n\nFrom your local drive: \nscp ~/MyLocalSeqDir/*fastq.gz ubuntu@InstanceIP:~/MyProjectDir/\n\n\n\n\nAlternatively, use a client such as \nCyberduck\n to open up a transfer window, or \nMountainduck\n to mount a cloud storage drive as a local disk in Mac/Finder or Windows/Explorer. See \nthis video\n for a quick tutorial.\n\n\nSetup\n\n\nThe rest of this documentation assumes the \ndcls/gdip/scripts\n directory is on your \n$PATH\n. If you are using the DCLS GDIP AMI, it already is. If you are not:\n\n\ngit clone https://github.com/dcls/gdip ~/gdip\nexport PATH=~/gdip/scripts:$PATH\n\n\n\n\nRunning the pipeline\n\n\nOnce a project directory has been created containing the paired-end \n_1.fastq.gz\n+\n_2.fastq.gz\n reads of interest, copy the Makefile into your project directory:\n\n\ncopy_makefile\n\n\n\n\nThen run the pipeline:\n\n\nmake\n\n\n\n\nIf you're using the GDIP AWS image (\nami-9f630088\n), the \n~/exampledata\n directory already contains a completed analysis. Running \nmake\n here will not re-run the analysis. Optionally, you may run \nmake clean\n to delete all files from the pre-existing analysis, and then run \nmake\n to start the analysis anew.\n\n\n# On ami-9f630088. Enter the exampledata directory:\ncd ~/exampledata\n\n# Remove pre-existing analysis:\nmake clean\n\n# Rerun the analysis:\nmake\n\n\n\n\nTypes of analysis\n\n\n\n\nFor a full report (SNP matrix, phylogenetic tree, AMR, MLST) run: \nmake\n.\n\n\nFor a SNP matrix and a phylogenetic tree run: \nmake tree-only\n.\n\n\nFor AMR results only, run: \nmake amr\n.\n\n\nFor MLST results only, run: \nmake mlst\n.\n\n\n\n\nOutput\n\n\nThe default DCLS GDIP pipeline (running \nmake\n) will generate a \nDATE\n-gdip-report.zip\n file containing all requested results. Additional files related to the analysis (e.g. summary logs and intermedaite analysis reports) generated by CFSAN-SNP Pipeline and SRST2 can be found within the CFSAN-output and SRST2 directories, respectively. For more information on other output files, see \nCFSAN-SNP Pipeline\n and \nSRST2\n documentaion.\n\n\nLarge intermediate files can be removed to save disk space by running: \nmake space\n after a run has been completed (this removes sam/bam alignment files in the cfsan output directory).\n\n\nTo permanently remove \nall\n analysis results and imtermediates (e.g., after a failed run), run \nmake clean\n.\n\n\nTransfering data to local drive\n\n\nThe \nscp\n command can be used to copy the gdip report to your local drive:\n\n\nscp ubuntu@InstanceIP:~/MyProjectDir/\nDATE\n-gdip-report.zip ~/SomeLocalDir/\n\n\n\n\nAlternatively, use a client such as \nCyberduck\n to open up a transfer window, or \nMountainduck\n to mount a cloud storage drive as a local disk in Mac/Finder or Windows/Explorer. See \nthis video\n for a quick tutorial.\n\n\nAdvanced Usage\n\n\nDCLS GDIP for different species\n\n\nDefault settings will generate results using genome/MLST references approriate for \nSalmonella enterica\n subsp Enteritidis. This can be changed by downloading alternative references and redirecting \ncfsan-snp.sh\n and \nmlstsrst2.sh\n to those files. Once \ncfsan-snp.sh\n and \nmlstsrst2.sh\n have been editted appropriately, DCLS GDIP can be invoked as described above. \n\n\nChange CFSAN-SNP reference\n\n\nDownload alternative reference in .fasta format and edit the Makefile in \n~/gdip/scripts\n.\n\n\nChange:\n\n\nREF_GENOME := /opt/genomes/senteritidisp125109.fasta\n\n\n\n\nto:\n\n\nREF_GENOME := /path/to/alternativeReference.fasta\n\n\n\n\nChange MLST reference\n\n\nDownload fasta allele sequences and a tab-delimited file which defines the ST profiles as a combination of alleles. These can be retrieved automatically from pubmlst.org/data/ using the script provided by SRST2, e.g.\n\n\ngetmlst.py --species \nEscherichia coli\n\n\n\n\n\nOnce these files are retrieved, edit \ngdip/scripts/mlstsrst2.sh\n:\n\n\nChange\n\n\nMLST_DB=\n/opt/genomes/mlst_senterica/Salmonella_enterica.fasta\n\nMLST_DEF=\n/opt/genomes/mlst_senterica/senterica.txt\n\n\n\n\n\nto:\n\n\nMLST_DB=\n/path/to/alternative/mlst/species.fasta\n\nMLST_DEF=\n/path/to/alternative/mlst/speciesdef.txt\n\n\n\n\n\nScripts\n\n\nThe Makefile runs several scripts, each performing a piece of the analysis. Scripts can be run individually. View script sources \nhere\n.\n\n\n\n\n\n\n\n\nScript\n\n\nDiscription\n\n\n\n\n\n\n\n\n\n\ncfsan-prepare-directories.sh\n\n\nOrganizes reads and symbolic links into the correct directory structure as needed by CFSAN SNP pipeline.\n\n\n\n\n\n\nmultisrst2.sh\n\n\nRuns SRST2 to identify antimicrobial resistance genes on multiple samples in a single directory. Run with \n-h\n option to get some help.\n\n\n\n\n\n\nmlstsrst2.sh\n\n\nRuns SRST2 to generate MLST report on multiple samples in a single directory. Run with \n-h\n option to get some help.\n\n\n\n\n\n\nMakefile\n\n\nRuns the shell scripts listed above, the CFSAN-SNP pipeline and FastTree to generate a final report.\n\n\n\n\n\n\ncopy_makefile\n\n\nCopies the Makefile above to the current working directory, and prints out some instructions.", 
            "title": "User Guide"
        }, 
        {
            "location": "/userguide/#user-guide", 
            "text": "DCLS GDIP runs from the Linux command line and consists of a number of shell scripts and a single Makefile compiling them all. Default parameters will generate a report for NGS reads obtained from  Salmonella enterica  subsp enteritidis isolates (Reference strain:  P125109 (NC_011294.1) , MLST;  Salmonella enterica ). For other species, see  Advanced usage .    This guide assumes an AWS EC2 instance launched from the DCLS GDIP image  ami-9f630088 .", 
            "title": "User Guide"
        }, 
        {
            "location": "/userguide/#basic-usage", 
            "text": "", 
            "title": "Basic usage"
        }, 
        {
            "location": "/userguide/#update-gdip-scripts", 
            "text": "The AWS image  ami-9f630088  ships with all necessary scripts for a completely automated analysis. These scripts reside in the  gdip  directory in the  ubuntu  user's home directory ( /home/ubuntu/gdip ). After launching the image, enter this directory and  git pull  to pull in any changes made to the scripts since the image was created.  # Enter the gdip directory\ncd ~/gdip\n\n# Pull any updates since the image was created\ngit pull\n\n# Go back to your home directory\ncd", 
            "title": "Update GDIP scripts"
        }, 
        {
            "location": "/userguide/#input", 
            "text": "DCLS GDIP assumes a project directory with paired fastq files ending in either:    _1.fastq.gz  and  _2.fastq.gz ; or   R1.fastq.gz  and  R2.fastq.gz   If your fastq.gz files are on a local drive, create a new project directory on your EC2 instance and use  scp  to copy sequence files into that directory:   From the EC2 instance:  mkdir MyProjectDir  From your local drive:  scp ~/MyLocalSeqDir/*fastq.gz ubuntu@InstanceIP:~/MyProjectDir/   Alternatively, use a client such as  Cyberduck  to open up a transfer window, or  Mountainduck  to mount a cloud storage drive as a local disk in Mac/Finder or Windows/Explorer. See  this video  for a quick tutorial.", 
            "title": "Input"
        }, 
        {
            "location": "/userguide/#setup", 
            "text": "The rest of this documentation assumes the  dcls/gdip/scripts  directory is on your  $PATH . If you are using the DCLS GDIP AMI, it already is. If you are not:  git clone https://github.com/dcls/gdip ~/gdip\nexport PATH=~/gdip/scripts:$PATH", 
            "title": "Setup"
        }, 
        {
            "location": "/userguide/#running-the-pipeline", 
            "text": "Once a project directory has been created containing the paired-end  _1.fastq.gz + _2.fastq.gz  reads of interest, copy the Makefile into your project directory:  copy_makefile  Then run the pipeline:  make  If you're using the GDIP AWS image ( ami-9f630088 ), the  ~/exampledata  directory already contains a completed analysis. Running  make  here will not re-run the analysis. Optionally, you may run  make clean  to delete all files from the pre-existing analysis, and then run  make  to start the analysis anew.  # On ami-9f630088. Enter the exampledata directory:\ncd ~/exampledata\n\n# Remove pre-existing analysis:\nmake clean\n\n# Rerun the analysis:\nmake", 
            "title": "Running the pipeline"
        }, 
        {
            "location": "/userguide/#types-of-analysis", 
            "text": "For a full report (SNP matrix, phylogenetic tree, AMR, MLST) run:  make .  For a SNP matrix and a phylogenetic tree run:  make tree-only .  For AMR results only, run:  make amr .  For MLST results only, run:  make mlst .", 
            "title": "Types of analysis"
        }, 
        {
            "location": "/userguide/#output", 
            "text": "The default DCLS GDIP pipeline (running  make ) will generate a  DATE -gdip-report.zip  file containing all requested results. Additional files related to the analysis (e.g. summary logs and intermedaite analysis reports) generated by CFSAN-SNP Pipeline and SRST2 can be found within the CFSAN-output and SRST2 directories, respectively. For more information on other output files, see  CFSAN-SNP Pipeline  and  SRST2  documentaion.  Large intermediate files can be removed to save disk space by running:  make space  after a run has been completed (this removes sam/bam alignment files in the cfsan output directory).  To permanently remove  all  analysis results and imtermediates (e.g., after a failed run), run  make clean .", 
            "title": "Output"
        }, 
        {
            "location": "/userguide/#transfering-data-to-local-drive", 
            "text": "The  scp  command can be used to copy the gdip report to your local drive:  scp ubuntu@InstanceIP:~/MyProjectDir/ DATE -gdip-report.zip ~/SomeLocalDir/  Alternatively, use a client such as  Cyberduck  to open up a transfer window, or  Mountainduck  to mount a cloud storage drive as a local disk in Mac/Finder or Windows/Explorer. See  this video  for a quick tutorial.", 
            "title": "Transfering data to local drive"
        }, 
        {
            "location": "/userguide/#advanced-usage", 
            "text": "", 
            "title": "Advanced Usage"
        }, 
        {
            "location": "/userguide/#dcls-gdip-for-different-species", 
            "text": "Default settings will generate results using genome/MLST references approriate for  Salmonella enterica  subsp Enteritidis. This can be changed by downloading alternative references and redirecting  cfsan-snp.sh  and  mlstsrst2.sh  to those files. Once  cfsan-snp.sh  and  mlstsrst2.sh  have been editted appropriately, DCLS GDIP can be invoked as described above.", 
            "title": "DCLS GDIP for different species"
        }, 
        {
            "location": "/userguide/#change-cfsan-snp-reference", 
            "text": "Download alternative reference in .fasta format and edit the Makefile in  ~/gdip/scripts .  Change:  REF_GENOME := /opt/genomes/senteritidisp125109.fasta  to:  REF_GENOME := /path/to/alternativeReference.fasta", 
            "title": "Change CFSAN-SNP reference"
        }, 
        {
            "location": "/userguide/#change-mlst-reference", 
            "text": "Download fasta allele sequences and a tab-delimited file which defines the ST profiles as a combination of alleles. These can be retrieved automatically from pubmlst.org/data/ using the script provided by SRST2, e.g.  getmlst.py --species  Escherichia coli   Once these files are retrieved, edit  gdip/scripts/mlstsrst2.sh :  Change  MLST_DB= /opt/genomes/mlst_senterica/Salmonella_enterica.fasta \nMLST_DEF= /opt/genomes/mlst_senterica/senterica.txt   to:  MLST_DB= /path/to/alternative/mlst/species.fasta \nMLST_DEF= /path/to/alternative/mlst/speciesdef.txt", 
            "title": "Change MLST reference"
        }, 
        {
            "location": "/userguide/#scripts", 
            "text": "The Makefile runs several scripts, each performing a piece of the analysis. Scripts can be run individually. View script sources  here .     Script  Discription      cfsan-prepare-directories.sh  Organizes reads and symbolic links into the correct directory structure as needed by CFSAN SNP pipeline.    multisrst2.sh  Runs SRST2 to identify antimicrobial resistance genes on multiple samples in a single directory. Run with  -h  option to get some help.    mlstsrst2.sh  Runs SRST2 to generate MLST report on multiple samples in a single directory. Run with  -h  option to get some help.    Makefile  Runs the shell scripts listed above, the CFSAN-SNP pipeline and FastTree to generate a final report.    copy_makefile  Copies the Makefile above to the current working directory, and prints out some instructions.", 
            "title": "Scripts"
        }, 
        {
            "location": "/about/", 
            "text": "Source\n\n\nhttps://github.com/dcls/gdip\n\n\nPeople\n\n\n\n\nStephen D. Turner\n\n\nKevin G. Libuit\n\n\n\n\nPipeline Description\n\n\n\n\nDCLS GDIP is a pipeline developed to analyze and compare sequenced isolates involved in food-borne outbreaks. \n\n\nReports generated from DCLS GDIP will enable identification of high confidence associations between cases of illness that warranting further public health investigation.", 
            "title": "About"
        }, 
        {
            "location": "/about/#source", 
            "text": "https://github.com/dcls/gdip", 
            "title": "Source"
        }, 
        {
            "location": "/about/#people", 
            "text": "Stephen D. Turner  Kevin G. Libuit", 
            "title": "People"
        }, 
        {
            "location": "/about/#pipeline-description", 
            "text": "DCLS GDIP is a pipeline developed to analyze and compare sequenced isolates involved in food-borne outbreaks.   Reports generated from DCLS GDIP will enable identification of high confidence associations between cases of illness that warranting further public health investigation.", 
            "title": "Pipeline Description"
        }
    ]
}